version: '3.9'

services:
  # db:
  #   build: ./database
  #   container_name: postgres_article_db
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - article_db_volume:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
  #     interval: 10s
  #     retries: 5

  # rss_reader:
  #   build: ./rss-reader
  #   container_name: rss_feed_reader_app
  #   restart: unless-stopped
  #   environment:
  #     RSS_FEED_URL: ${RSS_FEED_URL}
  #     POLL_INTERVAL: ${POLL_INTERVAL}
  #     DB_HOST: db  # Use Docker service name to connect within the network
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   depends_on:
  #     db:
  #       condition: service_healthy

  web_app:
    build: ./web-app
    container_name: web_app_container
    restart: unless-stopped
    environment:
      DB_HOST: ${DB_HOST} # Connect to the database service.
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5000:5000"
    # depends_on:
    #   db:
    #     condition: service_healthy

  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

volumes:
  article_db_volume:
